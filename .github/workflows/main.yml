name: GitHub Actions Demo
run-name: GitHub Actions Demo push

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      status: ${{ steps.output.outputs.status }}
      scanfile: ${{ steps.build.outputs.scanfile }}

    steps:
      # -------------------------------------
      # we will have to checkout data before we can do anything
      - uses: actions/checkout@v3

      - name: BeVerbose
        run: |
          echo "github.event_name: ${{ github.event_name }}"
          echo "github.ref: ${{ github.ref }}"

      # -------------------------------------
      # build someting
      - name: Build
        id: build
        run: |
          python3 -m pip install --upgrade pip
          pip install hatchling
          python3 -m pip install --upgrade build
          python3 -m build
          echo "scanfile=$( ls dist/*.whl )" >>$GITHUB_OUTPUT

      # -------------------------------------
      # run the scan action and produce a step_summary
      - name: run the reversinglabs/rl-scanner
        id: scan
        env:
          RLSECURE_ENCODED_LICENSE: ${{ secrets.RLSECURE_ENCODED_LICENSE }}
          RLSECURE_SITE_KEY: ${{ secrets.RLSECURE_SITE_KEY }}
        uses: maarten-boot/rl-scanner-docker-action@v3.15
        with:
          my-artifact-to-scan: ${{ steps.build.outputs.scanfile }}

      # -------------------------------------
      - name: Archive Report
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: report
          path: .rl_report

      - name: Run the action # You would run your tests before this using the output to set state/desc
        # uses: Sibz/github-status-action@v1
        uses: dobladov/github-status-action
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'ReversingLabs/rl-secure'
          description: ${{ steps.scan.outputs.status }}
          state: ${{ steps.scan.outputs.state }}
          sha: ${{ github.event.pull_request.head.sha || github.sha }}

#      # -------------------------------------
#      - name: Bump version and push tag
#        if: ${{ success() && contains(fromJSON('["pull_request"]'), github.event_name) }}
#        id: tag_version
#        uses: mathieudutour/github-tag-action@v6.1
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#        # output: new_tag , new_version
#
#      # -------------------------------------
#      - name: Create a GitHub release
#        if: ${{ success() && contains(fromJSON('["pull_request"]'), github.event_name) }}
#        uses: ncipollo/release-action@v1.12.0
#        with:
#          tag: ${{ steps.tag_version.outputs.new_tag }}
#          name: Release ${{ steps.tag_version.outputs.new_tag }}
#          body: ${{ steps.tag_version.outputs.changelog }}
